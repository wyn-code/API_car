// <auto-generated />
using System;
using CarDealerAPI.Config;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API_autos.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250711160154_Inicial")]
    partial class Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CarDealerAPI.Models.Auto.Auto", b =>
                {
                    b.Property<int>("Id_Autos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Autos"));

                    b.Property<int>("Año_Modelo")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Disponible")
                        .HasColumnType("bit");

                    b.Property<int>("EstadoId")
                        .HasColumnType("int");

                    b.Property<int>("Id_Modelo")
                        .HasColumnType("int");

                    b.Property<int>("Id_Tipo_Auto")
                        .HasColumnType("int");

                    b.Property<int>("Id_condicion")
                        .HasColumnType("int");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Motor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Precio")
                        .HasColumnType("float");

                    b.Property<DateTime>("fecha_creacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.HasKey("Id_Autos");

                    b.HasIndex("EstadoId");

                    b.HasIndex("Id_Modelo");

                    b.HasIndex("Id_Tipo_Auto");

                    b.HasIndex("Id_condicion");

                    b.ToTable("Autos");

                    b.HasData(
                        new
                        {
                            Id_Autos = 1,
                            Año_Modelo = 2019,
                            Descripcion = "Toyota Corolla usado, excelente estado, único dueño.",
                            Disponible = true,
                            EstadoId = 1,
                            Id_Modelo = 1,
                            Id_Tipo_Auto = 1,
                            Id_condicion = 1,
                            Marca = "Toyota",
                            Motor = "1.8L 4 cilindros",
                            Precio = 35000.0,
                            fecha_creacion = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id_Autos = 2,
                            Año_Modelo = 2020,
                            Descripcion = "Toyota Hilux, pickup usada, ideal para trabajo.",
                            Disponible = true,
                            EstadoId = 1,
                            Id_Modelo = 2,
                            Id_Tipo_Auto = 3,
                            Id_condicion = 2,
                            Marca = "Toyota",
                            Motor = "2.8L diesel",
                            Precio = 40000.0,
                            fecha_creacion = new DateTime(2023, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id_Autos = 3,
                            Año_Modelo = 2024,
                            Descripcion = "Ford F-150 0KM, versión full equipo.",
                            Disponible = true,
                            EstadoId = 1,
                            Id_Modelo = 3,
                            Id_Tipo_Auto = 3,
                            Id_condicion = 1,
                            Marca = "Ford",
                            Motor = "3.3L V6",
                            Precio = 45000.0,
                            fecha_creacion = new DateTime(2024, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id_Autos = 4,
                            Año_Modelo = 2018,
                            Descripcion = "Honda Civic usado, cuidado y mantenido, vendido recientemente.",
                            Disponible = false,
                            EstadoId = 2,
                            Id_Modelo = 4,
                            Id_Tipo_Auto = 1,
                            Id_condicion = 2,
                            Marca = "Honda",
                            Motor = "2.0L 4 cilindros",
                            Precio = 22000.0,
                            fecha_creacion = new DateTime(2022, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id_Autos = 5,
                            Año_Modelo = 2024,
                            Descripcion = "BMW Serie 3 convertible, edición especial 0KM.",
                            Disponible = true,
                            EstadoId = 1,
                            Id_Modelo = 6,
                            Id_Tipo_Auto = 6,
                            Id_condicion = 1,
                            Marca = "BMW",
                            Motor = "2.0L turbo",
                            Precio = 52000.0,
                            fecha_creacion = new DateTime(2024, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("CarDealerAPI.Models.Es0Km.Condicion", b =>
                {
                    b.Property<int>("Id_condicion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_condicion"));

                    b.Property<string>("condicionName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_condicion");

                    b.ToTable("Condicion");

                    b.HasData(
                        new
                        {
                            Id_condicion = 1,
                            condicionName = "0KM"
                        },
                        new
                        {
                            Id_condicion = 2,
                            condicionName = "Usado"
                        });
                });

            modelBuilder.Entity("CarDealerAPI.Models.Estado.Estado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Estados");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Disponible"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Vendido"
                        });
                });

            modelBuilder.Entity("CarDealerAPI.Models.Marcas.Marca", b =>
                {
                    b.Property<int>("Id_Marca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Marca"));

                    b.Property<string>("Nombre_Marca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Marca");

                    b.ToTable("Marcas");

                    b.HasData(
                        new
                        {
                            Id_Marca = 1,
                            Nombre_Marca = "Toyota"
                        },
                        new
                        {
                            Id_Marca = 2,
                            Nombre_Marca = "Ford"
                        },
                        new
                        {
                            Id_Marca = 3,
                            Nombre_Marca = "Honda"
                        },
                        new
                        {
                            Id_Marca = 4,
                            Nombre_Marca = "Chevrolet"
                        },
                        new
                        {
                            Id_Marca = 5,
                            Nombre_Marca = "BMW"
                        });
                });

            modelBuilder.Entity("CarDealerAPI.Models.Modelos.Modelo", b =>
                {
                    b.Property<int>("Id_Modelo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Modelo"));

                    b.Property<int?>("MarcaId_Marca")
                        .HasColumnType("int");

                    b.Property<string>("Nombre_Modelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Modelo");

                    b.HasIndex("MarcaId_Marca");

                    b.ToTable("Modelos");

                    b.HasData(
                        new
                        {
                            Id_Modelo = 1,
                            Nombre_Modelo = "Corolla"
                        },
                        new
                        {
                            Id_Modelo = 2,
                            Nombre_Modelo = "Hilux"
                        },
                        new
                        {
                            Id_Modelo = 3,
                            Nombre_Modelo = "F-150"
                        },
                        new
                        {
                            Id_Modelo = 4,
                            Nombre_Modelo = "Civic"
                        },
                        new
                        {
                            Id_Modelo = 5,
                            Nombre_Modelo = "Camaro"
                        },
                        new
                        {
                            Id_Modelo = 6,
                            Nombre_Modelo = "Serie 3"
                        });
                });

            modelBuilder.Entity("CarDealerAPI.Models.Tipo_Auto.TipoDeAuto", b =>
                {
                    b.Property<int>("Id_Tipo_Auto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Tipo_Auto"));

                    b.Property<string>("tipo_autos")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id_Tipo_Auto");

                    b.HasIndex("tipo_autos")
                        .IsUnique();

                    b.ToTable("TiposDeAuto");

                    b.HasData(
                        new
                        {
                            Id_Tipo_Auto = 1,
                            tipo_autos = "Sedan"
                        },
                        new
                        {
                            Id_Tipo_Auto = 2,
                            tipo_autos = "SUV"
                        },
                        new
                        {
                            Id_Tipo_Auto = 3,
                            tipo_autos = "Pickup"
                        },
                        new
                        {
                            Id_Tipo_Auto = 4,
                            tipo_autos = "Coupé"
                        },
                        new
                        {
                            Id_Tipo_Auto = 5,
                            tipo_autos = "Hatchback"
                        },
                        new
                        {
                            Id_Tipo_Auto = 6,
                            tipo_autos = "Convertible"
                        });
                });

            modelBuilder.Entity("CarDealerAPI.Models.Auto.Auto", b =>
                {
                    b.HasOne("CarDealerAPI.Models.Estado.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarDealerAPI.Models.Modelos.Modelo", "Modelo")
                        .WithMany()
                        .HasForeignKey("Id_Modelo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarDealerAPI.Models.Tipo_Auto.TipoDeAuto", "Tipo_Auto")
                        .WithMany("autos")
                        .HasForeignKey("Id_Tipo_Auto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarDealerAPI.Models.Es0Km.Condicion", "CondicionName")
                        .WithMany()
                        .HasForeignKey("Id_condicion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CondicionName");

                    b.Navigation("Estado");

                    b.Navigation("Modelo");

                    b.Navigation("Tipo_Auto");
                });

            modelBuilder.Entity("CarDealerAPI.Models.Modelos.Modelo", b =>
                {
                    b.HasOne("CarDealerAPI.Models.Marcas.Marca", null)
                        .WithMany("Modelos")
                        .HasForeignKey("MarcaId_Marca");
                });

            modelBuilder.Entity("CarDealerAPI.Models.Marcas.Marca", b =>
                {
                    b.Navigation("Modelos");
                });

            modelBuilder.Entity("CarDealerAPI.Models.Tipo_Auto.TipoDeAuto", b =>
                {
                    b.Navigation("autos");
                });
#pragma warning restore 612, 618
        }
    }
}
